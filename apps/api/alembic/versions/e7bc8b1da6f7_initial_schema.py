"""initial schema

Revision ID: e7bc8b1da6f7
Revises: 
Create Date: 2025-10-10 00:53:49.536925+00:00

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e7bc8b1da6f7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assessment_periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Enum('Midterm', 'Finals', name='assessment_period_name'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('likert_scale_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('point_values', sa.JSON(), nullable=False),
    sa.Column('min_value', sa.SmallInteger(), nullable=False),
    sa.Column('max_value', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('modalities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Enum('Online', 'Face-to-Face', 'Hybrid', 'Modular', name='modality_name'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('school_years',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year_start', sa.SmallInteger(), nullable=False),
    sa.Column('year_end', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('year_start', 'year_end', name='uk_school_year')
    )
    op.create_table('super_admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('pin_hash', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('active', 'locked', name='super_admin_status'), nullable=False),
    sa.Column('token_version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('universities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('street', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('status', sa.Enum('pending', 'active', 'inactive', name='university_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_universities_name', 'universities', ['name'], unique=False)
    op.create_index('idx_universities_status', 'universities', ['status'], unique=False)
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('parent_department_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('short_name', sa.String(length=50), nullable=True),
    sa.Column('head_user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['parent_department_id'], ['departments.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('university_id', 'name', name='uk_university_department_name')
    )
    op.create_table('programs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('program_code', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('university_id', 'program_code', name='uk_university_program_code')
    )
    op.create_table('registration_codes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('code_value', sa.String(length=50), nullable=False),
    sa.Column('max_uses', sa.Integer(), nullable=False),
    sa.Column('current_uses', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', name='registration_code_status'), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code_value')
    )
    op.create_index('idx_reg_codes_university_id', 'registration_codes', ['university_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.String(length=100), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'unverified', name='user_status'), nullable=False),
    sa.Column('program_id', sa.Integer(), nullable=True),
    sa.Column('registration_code_id', sa.Integer(), nullable=True),
    sa.Column('token_version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['program_id'], ['programs.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['registration_code_id'], ['registration_codes.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('university_id', 'school_id', name='uk_university_school_id')
    )
    op.create_index('idx_users_status', 'users', ['status'], unique=False)
    bind = op.get_bind()
    if bind.dialect.name != 'sqlite':
        op.create_foreign_key(
            'fk_departments_head_user',
            'departments',
            'users',
            ['head_user_id'],
            ['id'],
            ondelete='SET NULL',
        )
    op.create_table('audit_logs',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.Column('actor_user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('target_entity', sa.String(length=100), nullable=True),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=False),
    sa.Column('timestamp', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['actor_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_action', 'audit_logs', ['action'], unique=False)
    op.create_index('idx_audit_actor', 'audit_logs', ['actor_user_id'], unique=False)
    op.create_index('idx_audit_target', 'audit_logs', ['target_entity', 'target_id'], unique=False)
    op.create_table('background_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('job_type', sa.Enum('ACADEMIC_STRUCTURE_IMPORT', 'USER_IMPORT', 'HISTORICAL_USER_ENROLLMENT_IMPORT', 'HISTORICAL_EVALUATION_IMPORT', 'PERIOD_CANCELLATION', 'REPORT_GENERATION', 'RECYCLED_CONTENT_CHECK', 'QUANTITATIVE_ANALYSIS', 'QUALITATIVE_ANALYSIS', 'FINAL_AGGREGATION', name='background_job_type'), nullable=False),
    sa.Column('status', sa.Enum('queued', 'processing', 'cancellation_requested', 'completed_success', 'completed_partial_failure', 'failed', 'cancelled', name='background_job_status'), nullable=False),
    sa.Column('submitted_by_user_id', sa.Integer(), nullable=False),
    sa.Column('job_parameters', sa.JSON(), nullable=True),
    sa.Column('progress', sa.SmallInteger(), nullable=False),
    sa.Column('result_message', sa.Text(), nullable=True),
    sa.Column('result_storage_path', sa.String(length=1024), nullable=True),
    sa.Column('log_output', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('rows_total', sa.Integer(), nullable=True),
    sa.Column('rows_processed', sa.Integer(), nullable=True),
    sa.Column('rows_failed', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['submitted_by_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tasks_job_type', 'background_tasks', ['job_type'], unique=False)
    op.create_index('idx_tasks_status', 'background_tasks', ['status'], unique=False)
    op.create_index('idx_tasks_submitted_by', 'background_tasks', ['submitted_by_user_id'], unique=False)
    op.create_table('evaluation_form_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('likert_scale_template_id', sa.Integer(), nullable=False),
    sa.Column('intended_for', sa.Enum('Students', 'Department Heads', 'Both', name='evaluation_intended_for'), nullable=False),
    sa.Column('status', sa.Enum('draft', 'active', 'assigned', 'archived', name='evaluation_form_status'), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['likert_scale_template_id'], ['likert_scale_templates.id'], ),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('university_id', 'name', name='uk_university_form_name')
    )
    op.create_index('idx_forms_status', 'evaluation_form_templates', ['status'], unique=False)
    op.create_table('generated_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('requested_by_user_id', sa.Integer(), nullable=False),
    sa.Column('report_type', sa.String(length=100), nullable=False),
    sa.Column('report_parameters', sa.JSON(), nullable=False),
    sa.Column('status', sa.Enum('queued', 'generating', 'ready', 'failed', name='generated_report_status'), nullable=False),
    sa.Column('file_format', sa.Enum('PDF', 'CSV', name='generated_report_file_format'), nullable=False),
    sa.Column('storage_path', sa.String(length=1024), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['requested_by_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_reports_requested_by', 'generated_reports', ['requested_by_user_id'], unique=False)
    op.create_index('idx_reports_status', 'generated_reports', ['status'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('recipient_type', sa.String(length=50), nullable=False),
    sa.Column('actor_id', sa.Integer(), nullable=True),
    sa.Column('actor_type', sa.String(length=50), nullable=True),
    sa.Column('action_type', sa.String(length=100), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('delivery_methods', sa.JSON(), nullable=False),
    sa.Column('status', sa.Enum('unread', 'read', 'archived', name='notification_status'), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_notifications_recipient', 'notifications', ['recipient_id', 'recipient_type'], unique=False)
    op.create_index('idx_notifications_status', 'notifications', ['status'], unique=False)
    op.create_table('school_terms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_year_id', sa.Integer(), nullable=False),
    sa.Column('semester', sa.Enum('1st Semester', '2nd Semester', 'Summer', name='school_term_semester'), nullable=False),
    sa.ForeignKeyConstraint(['school_year_id'], ['school_years.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('school_year_id', 'semester', name='uk_school_term')
    )
    op.create_table('subjects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('edp_code', sa.String(length=50), nullable=False),
    sa.Column('subject_code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('university_id', 'edp_code', name='uk_university_edp_code')
    )
    op.create_table('university_registration_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_name', sa.String(length=255), nullable=False),
    sa.Column('contact_person_name', sa.String(length=255), nullable=False),
    sa.Column('contact_person_email', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('submitted', 'in_review', 'approved', 'rejected', name='registration_request_status'), nullable=False),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('university_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('contact_person_email', name='uk_contact_person_email')
    )
    op.create_index('idx_requests_status', 'university_registration_requests', ['status'], unique=False)
    op.create_table('university_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('setting_name', sa.String(length=100), nullable=False),
    sa.Column('setting_value', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('university_id', 'setting_name', name='uk_university_setting_name')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('ai_suggestions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('generated_for_user_id', sa.Integer(), nullable=False),
    sa.Column('generated_by_user_id', sa.Integer(), nullable=False),
    sa.Column('context_school_term_id', sa.Integer(), nullable=False),
    sa.Column('context_assessment_period_id', sa.Integer(), nullable=False),
    sa.Column('suggestion_title', sa.String(length=255), nullable=False),
    sa.Column('suggestion_content', sa.Text(), nullable=False),
    sa.Column('prompt_sent_to_api', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['context_assessment_period_id'], ['assessment_periods.id'], ),
    sa.ForeignKeyConstraint(['context_school_term_id'], ['school_terms.id'], ),
    sa.ForeignKeyConstraint(['generated_by_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['generated_for_user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_ai_suggestions_by_user', 'ai_suggestions', ['generated_by_user_id'], unique=False)
    op.create_index('idx_ai_suggestions_for_user', 'ai_suggestions', ['generated_for_user_id'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('storage_path', sa.String(length=1024), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['request_id'], ['university_registration_requests.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('storage_path')
    )
    op.create_table('evaluation_criteria',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('form_template_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('weight', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('order', sa.SmallInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['form_template_id'], ['evaluation_form_templates.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('form_template_id', 'name', name='uk_form_criterion_name')
    )
    op.create_table('evaluation_periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('school_term_id', sa.Integer(), nullable=False),
    sa.Column('assessment_period_id', sa.Integer(), nullable=False),
    sa.Column('student_form_template_id', sa.Integer(), nullable=False),
    sa.Column('dept_head_form_template_id', sa.Integer(), nullable=True),
    sa.Column('start_date_time', sa.DateTime(), nullable=False),
    sa.Column('end_date_time', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('scheduled', 'active', 'closed', 'cancelling', 'cancelled', name='evaluation_period_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['assessment_period_id'], ['assessment_periods.id'], ),
    sa.ForeignKeyConstraint(['dept_head_form_template_id'], ['evaluation_form_templates.id'], ),
    sa.ForeignKeyConstraint(['school_term_id'], ['school_terms.id'], ),
    sa.ForeignKeyConstraint(['student_form_template_id'], ['evaluation_form_templates.id'], ),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('university_id', 'school_term_id', 'assessment_period_id', name='uk_university_term_assessment')
    )
    op.create_index('idx_periods_end_time', 'evaluation_periods', ['end_date_time'], unique=False)
    op.create_index('idx_periods_start_time', 'evaluation_periods', ['start_date_time'], unique=False)
    op.create_index('idx_periods_status', 'evaluation_periods', ['status'], unique=False)
    op.create_table('faculty_department_affiliations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('school_term_id', sa.Integer(), nullable=False),
    sa.Column('is_home_department', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['faculty_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['school_term_id'], ['school_terms.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('faculty_id', 'department_id', 'school_term_id', name='uk_faculty_department_term')
    )
    op.create_table('subject_offerings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('subject_id', sa.Integer(), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.Column('school_term_id', sa.Integer(), nullable=False),
    sa.Column('modality_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['faculty_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['modality_id'], ['modalities.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['school_term_id'], ['school_terms.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_faculty_term', 'subject_offerings', ['faculty_id', 'school_term_id'], unique=False)
    op.create_table('enrollments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('subject_offering_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_offering_id'], ['subject_offerings.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id', 'subject_offering_id', name='uk_student_offering')
    )
    op.create_table('evaluation_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('form_template_id', sa.Integer(), nullable=False),
    sa.Column('criterion_id', sa.Integer(), nullable=True),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('question_type', sa.Enum('likert', 'open_ended', name='evaluation_question_type'), nullable=False),
    sa.Column('is_required', sa.Boolean(), nullable=False),
    sa.Column('min_word_count', sa.SmallInteger(), nullable=True),
    sa.Column('max_word_count', sa.SmallInteger(), nullable=True),
    sa.Column('order', sa.SmallInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['criterion_id'], ['evaluation_criteria.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['form_template_id'], ['evaluation_form_templates.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_questions_criterion_id', 'evaluation_questions', ['criterion_id'], unique=False)
    op.create_index('idx_questions_form_template_id', 'evaluation_questions', ['form_template_id'], unique=False)
    op.create_table('evaluation_submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('university_id', sa.Integer(), nullable=False),
    sa.Column('evaluation_period_id', sa.Integer(), nullable=False),
    sa.Column('evaluator_id', sa.Integer(), nullable=False),
    sa.Column('evaluatee_id', sa.Integer(), nullable=False),
    sa.Column('subject_offering_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('submitted', 'processing', 'processed', 'archived', 'invalidated_for_resubmission', 'cancelled', name='evaluation_submission_status'), nullable=False),
    sa.Column('integrity_check_status', sa.Enum('pending', 'completed', 'failed', name='integrity_check_status'), nullable=False),
    sa.Column('analysis_status', sa.Enum('pending', 'quant_qual_complete', 'aggregation_complete', 'failed', name='analysis_pipeline_status'), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_resubmission', sa.Boolean(), nullable=False),
    sa.Column('original_submission_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['evaluatee_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['evaluation_period_id'], ['evaluation_periods.id'], ),
    sa.ForeignKeyConstraint(['evaluator_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['original_submission_id'], ['evaluation_submissions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['subject_offering_id'], ['subject_offerings.id'], ),
    sa.ForeignKeyConstraint(['university_id'], ['universities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('evaluation_period_id', 'evaluator_id', 'evaluatee_id', 'subject_offering_id', name='uk_submission_uniqueness')
    )
    op.create_index('idx_evaluatee_period', 'evaluation_submissions', ['evaluatee_id', 'evaluation_period_id'], unique=False)
    op.create_index('idx_submissions_analysis_status', 'evaluation_submissions', ['analysis_status'], unique=False)
    op.create_index('idx_submissions_integrity_status', 'evaluation_submissions', ['integrity_check_status'], unique=False)
    op.create_index('idx_submissions_status', 'evaluation_submissions', ['status'], unique=False)
    op.create_table('evaluation_likert_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer_value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['evaluation_questions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['submission_id'], ['evaluation_submissions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('submission_id', 'question_id', name='uk_likert_answer_uniqueness')
    )
    op.create_table('evaluation_open_ended_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer_text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['evaluation_questions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['submission_id'], ['evaluation_submissions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('submission_id', 'question_id', name='uk_open_answer_uniqueness')
    )
    op.create_table('flagged_evaluations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('flag_reason', sa.Enum('Low-Confidence', 'Recycled Content', 'Sentiment Mismatch', name='flagged_evaluation_reason'), nullable=False),
    sa.Column('flag_details', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'resolved', name='flagged_evaluation_status'), nullable=False),
    sa.Column('resolution', sa.Enum('approved', 'archived', 'resubmission_requested', name='flagged_evaluation_resolution'), nullable=True),
    sa.Column('resolved_by_admin_id', sa.Integer(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.Column('resubmission_grace_period_ends_at', sa.DateTime(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['resolved_by_admin_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['submission_id'], ['evaluation_submissions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('submission_id')
    )
    op.create_index('idx_flagged_resolution', 'flagged_evaluations', ['resolution'], unique=False)
    op.create_index('idx_flagged_status', 'flagged_evaluations', ['status'], unique=False)
    op.create_table('numerical_aggregates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('per_question_median_scores', sa.JSON(), nullable=False),
    sa.Column('per_criterion_average_scores', sa.JSON(), nullable=False),
    sa.Column('quant_score_raw', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('z_quant', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('final_score_60_40', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('cohort_n', sa.Integer(), nullable=False),
    sa.Column('cohort_mean', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('cohort_std_dev', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('is_final_snapshot', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['submission_id'], ['evaluation_submissions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('submission_id')
    )
    op.create_table('sentiment_aggregates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('average_positive_score', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('average_neutral_score', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('average_negative_score', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('qual_score_raw', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('z_qual', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('is_final_snapshot', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['submission_id'], ['evaluation_submissions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('submission_id')
    )
    op.create_table('open_ended_keywords',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('open_ended_answer_id', sa.Integer(), nullable=False),
    sa.Column('keyword', sa.String(length=255), nullable=False),
    sa.Column('relevance_score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['open_ended_answer_id'], ['evaluation_open_ended_answers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('open_ended_answer_id', 'keyword', name='uk_answer_keyword')
    )
    op.create_index('idx_keyword', 'open_ended_keywords', ['keyword'], unique=False)
    op.create_table('open_ended_sentiments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('open_ended_answer_id', sa.Integer(), nullable=False),
    sa.Column('predicted_sentiment_label', sa.Enum('positive', 'neutral', 'negative', name='sentiment_label'), nullable=False),
    sa.Column('predicted_sentiment_label_score', sa.Float(), nullable=False),
    sa.Column('positive_score', sa.Float(), nullable=False),
    sa.Column('neutral_score', sa.Float(), nullable=False),
    sa.Column('negative_score', sa.Float(), nullable=False),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['open_ended_answer_id'], ['evaluation_open_ended_answers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('open_ended_answer_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('open_ended_sentiments')
    op.drop_index('idx_keyword', table_name='open_ended_keywords')
    op.drop_table('open_ended_keywords')
    op.drop_table('sentiment_aggregates')
    op.drop_table('numerical_aggregates')
    op.drop_index('idx_flagged_status', table_name='flagged_evaluations')
    op.drop_index('idx_flagged_resolution', table_name='flagged_evaluations')
    op.drop_table('flagged_evaluations')
    op.drop_table('evaluation_open_ended_answers')
    op.drop_table('evaluation_likert_answers')
    op.drop_index('idx_submissions_status', table_name='evaluation_submissions')
    op.drop_index('idx_submissions_integrity_status', table_name='evaluation_submissions')
    op.drop_index('idx_submissions_analysis_status', table_name='evaluation_submissions')
    op.drop_index('idx_evaluatee_period', table_name='evaluation_submissions')
    op.drop_table('evaluation_submissions')
    op.drop_index('idx_questions_form_template_id', table_name='evaluation_questions')
    op.drop_index('idx_questions_criterion_id', table_name='evaluation_questions')
    op.drop_table('evaluation_questions')
    op.drop_table('enrollments')
    op.drop_index('idx_faculty_term', table_name='subject_offerings')
    op.drop_table('subject_offerings')
    op.drop_table('faculty_department_affiliations')
    op.drop_index('idx_periods_status', table_name='evaluation_periods')
    op.drop_index('idx_periods_start_time', table_name='evaluation_periods')
    op.drop_index('idx_periods_end_time', table_name='evaluation_periods')
    op.drop_table('evaluation_periods')
    op.drop_table('evaluation_criteria')
    op.drop_table('documents')
    op.drop_index('idx_ai_suggestions_for_user', table_name='ai_suggestions')
    op.drop_index('idx_ai_suggestions_by_user', table_name='ai_suggestions')
    op.drop_table('ai_suggestions')
    op.drop_table('user_roles')
    op.drop_table('university_settings')
    op.drop_index('idx_requests_status', table_name='university_registration_requests')
    op.drop_table('university_registration_requests')
    op.drop_table('subjects')
    op.drop_table('school_terms')
    op.drop_index('idx_reg_codes_university_id', table_name='registration_codes')
    op.drop_table('registration_codes')
    op.drop_index('idx_notifications_status', table_name='notifications')
    op.drop_index('idx_notifications_recipient', table_name='notifications')
    op.drop_table('notifications')
    op.drop_index('idx_reports_status', table_name='generated_reports')
    op.drop_index('idx_reports_requested_by', table_name='generated_reports')
    op.drop_table('generated_reports')
    op.drop_index('idx_forms_status', table_name='evaluation_form_templates')
    op.drop_table('evaluation_form_templates')
    op.drop_index('idx_tasks_submitted_by', table_name='background_tasks')
    op.drop_index('idx_tasks_status', table_name='background_tasks')
    op.drop_index('idx_tasks_job_type', table_name='background_tasks')
    op.drop_table('background_tasks')
    op.drop_index('idx_audit_target', table_name='audit_logs')
    op.drop_index('idx_audit_actor', table_name='audit_logs')
    op.drop_index('idx_audit_action', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index('idx_users_status', table_name='users')
    bind = op.get_bind()
    if bind.dialect.name != 'sqlite':
        op.drop_constraint('fk_departments_head_user', 'departments', type_='foreignkey')
    op.drop_table('users')
    op.drop_index('idx_universities_status', table_name='universities')
    op.drop_index('idx_universities_name', table_name='universities')
    op.drop_table('universities')
    op.drop_table('super_admins')
    op.drop_table('school_years')
    op.drop_table('roles')
    op.drop_table('programs')
    op.drop_table('modalities')
    op.drop_table('likert_scale_templates')
    op.drop_table('departments')
    op.drop_table('assessment_periods')
    # ### end Alembic commands ###
